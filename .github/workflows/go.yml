name: Go
on: [push]
env:
  REPO_NAME: github.com/${{ github.repository }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set environment on build
      run: |
        echo ::set-env name=GOPATH::${HOME}/go
        echo ::set-env name=REPO_NAME::$(basename ${{ github.repository }})

    - name: Setup GO build environment
      run: |
        mkdir -p $(dirname ${GOPATH}/src/${REPO_NAME})
        ln -svf ${{ github.workspace }} ${GOPATH}/src/${REPO_NAME}
        sudo apt-get install gcc-aarch64-linux-gnu

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Test
      run: |
        cd $GOPATH/src/$REPO_NAME
        go fmt $(go list ./... | grep -v /vendor/)
        go vet $(go list ./... | grep -v /vendor/)
        go test -race $(go list ./... | grep -v /vendor/)

    - name: Build-amd64
      run: |
        go build -v -race -ldflags "-extldflags '-static'" -o ${GITHUB_WORKSPACE}/build/amd64/raspi-exporter raspi_exporter/cmd/raspi_exporter

    - name: Build-arm64
      run: |
        env GOOS=linux GOARCH=arm64 go build -v -ldflags "-extldflags '-static'" -o build/arm64/raspi-exporter raspi_exporter/cmd/raspi_exporter

    - name: Build-arm64-racebuild
      run: |
        env GOOS=linux GOARCH=arm64 CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc go build -v -ldflags "-extldflags '-static'" -race -o build/arm64-race/raspi-exporter raspi_exporter/cmd/raspi_exporter
